{"version":3,"sources":["services/getBingo.js","services/getWinnerCheck.js","store/modules/bingo.js","store/constants.js","store/modules/app.js","containers/WinnerCard.js","containers/ControlButton.js","containers/BingoCard.js","containers/BingoTotal.js","components/BingoScore.js","containers/BingoCell.js","components/BingoTable.js","components/BingoBoard.js","containers/Bingo.js","App.js","store/reducers.js","store/index.js","index.js"],"names":["getBingo","player","cell","result","cells","paints","index","size","quot","Math","floor","remain","flag","i","push","getWinnerCheck","p1","p2","setMessage","bool","bingoRender","createAction","bingoClear","bingoCellPaint","bingoCheck","bingoWinnerCheck","bingo","defaultState","winner","player1","player2","handleActions","state","shuffle","arr","sort","_","random","slice","length","immutable","$set","payload","PLAYER1","indexOf","PLAYER2","$push","appStart","appClear","appPlayerFlag","start","WinnerCard","handleClick","props","this","onClick","Component","mapDispatch","connect","ControlButton","app","BingoCard","type","BingoTotal","total","cards","key","BingoCell","paint","alert","console","log","className","rowSize","cellSize","tick","rows","renderCells","control","onClickCapture","e","stopPropagation","BingoScore","Bingo","BingoBoard","App","combineReducers","createStore","reducers","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.94747a67.chunk.js","sourcesContent":["const getBingo = (player, cell) => {\n\n    const size = 5\n    const result = []\n\n    const { cells, paints } = player\n\n    for (let index = 0; index < (size * size); index++) {\n\n        if (cells[index] === cell) {\n\n            const quot = Math.floor(index / size)\n            const remain  = index % size\n\n\n            let flag = true\n            for (let i = 0; i < size; i++) if (!paints[quot * size + i]) flag = false\n            if (flag) result.push(`Row ${ quot + 1 }`)\n\n\n            flag = true\n            for (let i = 0; i < size; i++) if (!paints[i * size + remain]) flag = false\n            if (flag) result.push(`Column ${ remain + 1 }`)\n\n\n            flag = false\n            if (quot === remain) {\n\n                flag = true\n                for(let i = 0; i < size; i++) if (!paints[i * size + i]) flag = false\n\n            }\n            if (flag) result.push('Line \\\\')\n\n\n            flag = false\n            if (index % (size - 1) === 0 && index !== 0 && index !== size*size-1) {\n\n                flag = true\n                for(let i = 1; i <=size; i++) if (!paints[i * (size - 1)]) flag = false\n\n            }\n            if (flag) result.push('Line /')\n\n        }\n\n    }\n\n    return result\n\n}\n\nexport default getBingo","const getWinnerCheck = (p1, p2) => {\n\n    const setMessage = bool => ( bool ? 'Player1' : 'Player2') + '이 빙고를 완성했습니다.'\n\n    if (p1 > 4 && p2 > 4) {\n\n        if (p1 === p2) return '무승부입니다'\n\n        return setMessage(p1 > p2)\n\n    }\n    else if (p1 > 4 || p2 > 4) return setMessage(p1 > p2)\n    else return ''\n\n}\n\nexport default getWinnerCheck","import { createAction, handleActions } from 'redux-actions'\nimport * as types from '../constants'\nimport immutable from 'immutability-helper'\n\nimport getBingo from '../../services/getBingo'\nimport getWinnerCheck from '../../services/getWinnerCheck'\n\nexport const bingoRender = createAction(types.BINGO_RENDER)\nexport const bingoClear = createAction(types.BINGO_CLEAR)\nexport const bingoCellPaint = createAction(types.BINGO_CELL_PAINT)\nexport const bingoCheck = createAction(types.BINGO_CHECK)\nexport const bingoWinnerCheck = createAction(types.BINGO_WINNER_CHECK)\n\nconst player = { cells: [], paints: [], bingo: [] }\n\nconst defaultState = {\n    winner: '',\n    player1: player,\n    player2: player\n}\n\nexport default handleActions({\n    [types.BINGO_RENDER]: state => {\n\n        const cells = [], paints = []\n        const shuffle = arr => arr.sort(_ => 0.5 - Math.random()).slice()\n\n        while (cells.length !== 25) {\n\n            cells.push(cells.length + 1)\n            paints.push(false)\n\n        }\n\n        return immutable(state, {\n            player1: {\n                cells: {\n                    $set: shuffle(cells)\n                },\n                paints: {\n                    $set: paints\n                },\n                bingo: {\n                    $set: []\n                }\n            },\n            player2: {\n                cells: {\n                    $set: shuffle(cells)\n                },\n                paints: {\n                    $set: paints\n                },\n                bingo: {\n                    $set: []\n                }\n            }\n        })\n\n    },\n    [types.BINGO_CLEAR]: _ => defaultState,\n    [types.BINGO_CELL_PAINT]: (state, { payload }) => {\n\n        const index = {\n            PLAYER1 : state.player1.cells.indexOf(payload),\n            PLAYER2 : state.player2.cells.indexOf(payload)\n        }\n\n        return immutable(state, {\n\n            player1: {\n                paints: {\n                    [index.PLAYER1]: {\n                        $set: true\n                    }\n                }\n            },\n            player2: {\n                paints: {\n                    [index.PLAYER2]: {\n                        $set: true\n                    }\n                }\n            }\n\n        })\n\n    },\n    [types.BINGO_CHECK]: (state, { payload }) => {\n\n        const { player1, player2 } = state\n\n        return immutable(state, {\n            player1: {\n                bingo: {\n                    $push: getBingo(player1, payload)\n                }\n            },\n            player2: {\n                bingo: {\n                    $push: getBingo(player2, payload)\n                }\n            }\n        })\n\n    },\n    [types.BINGO_WINNER_CHECK]: (state) => {\n\n        const { player1, player2 } = state\n\n        return immutable(state, { \n            winner: { \n                $set: getWinnerCheck(player1.bingo.length, player2.bingo.length) \n            }\n        })\n\n    }\n}, defaultState)","export const APP_START = '[app] 🚀 appStart'\nexport const APP_CLEAR = '[app] 🚀 appClear'\nexport const APP_PLAYER_FLAG = '[app] 🚀 appPlayerFlag'\n\nexport const BINGO_RENDER = '[bingo] 🚀 bingoRender'\nexport const BINGO_CLEAR = '[bingo] 🚀 bingoClear'\nexport const BINGO_CELL_PAINT = '[bingo] 🚀 bingPlayerCheck'\nexport const BINGO_CHECK = '[bingo] 🚀 bingoCheck'\nexport const BINGO_WINNER_CHECK = '[bingo] 🚀 bingoWinnerCheck'","import { createAction, handleActions } from 'redux-actions'\nimport * as types from '../constants'\nimport immutable from 'immutability-helper'\n\nexport const appStart = createAction(types.APP_START)\nexport const appClear = createAction(types.APP_CLEAR)\nexport const appPlayerFlag = createAction(types.APP_PLAYER_FLAG)\n\nconst defaultState = {\n    start: false,\n    flag: false\n}\n\nexport default handleActions({\n    [types.APP_START]: state => immutable(state, { \n        start: { \n            $set: true \n        }\n    }),\n    [types.APP_CLEAR]: _ => defaultState,\n    [types.APP_PLAYER_FLAG]: state => {\n\n        const { flag } = state\n\n        return immutable(state, {\n            flag: {\n                $set: !flag\n            }\n        })\n\n    },\n}, defaultState)","import React, { Component } from 'react'\n\nimport { connect } from 'react-redux'\n\nimport { bingoClear } from '../store/modules/bingo'\nimport { appClear } from '../store/modules/app'\n\nclass WinnerCard extends Component {\n\n    handleClick = () => {\n\n        const { bingoClear, appClear } = this.props\n        const { winner } = this.props\n\n        if (winner) {\n\n            bingoClear()\n            appClear()\n\n        }\n\n    }\n\n    render() {\n\n        const { winner } = this.props\n\n        return (\n            winner &&\n            <div>\n\n                <strong>{ winner }</strong>\n\n                <button onClick={ this.handleClick }>확인</button>\n\n            </div>\n        )\n\n    }\n\n}\n\nconst mapState = ({ bingo: { winner } }) => {\n\n    return ({\n        winner\n    })\n}\n\nconst mapDispatch = { bingoClear, appClear }\n\nexport default connect(\n    mapState,\n    mapDispatch\n)(WinnerCard)","import React, { Component } from 'react'\n\nimport { connect } from 'react-redux'\nimport { appStart } from '../store/modules/app'\nimport { bingoRender } from '../store/modules/bingo'\n\nclass ControlButton extends Component {\n\n    handleClick = () => {\n\n        const { appStart, bingoRender } = this.props\n\n        appStart()\n        bingoRender()\n\n    }\n\n    render() {\n\n        const { start } = this.props\n\n        return (\n            <button onClick={ this.handleClick }>\n\n                { !start ? '게임시작' : '게임재시작' }\n        \n            </button>\n        )\n\n    }\n\n}\n\nconst mapState = ({ app: { start }}) => ({ start })\n\nconst mapDispatch = { appStart, bingoRender }\n\nexport default connect(\n    mapState,\n    mapDispatch\n)(ControlButton)","import React, { Component } from 'react'\n\nimport { connect } from 'react-redux'\n\nclass BingoCard extends Component {\n\n    render() {\n\n        const { bingo } = this.props\n\n        return (\n            <p>\n                { bingo }\n            </p>\n        )\n\n    }\n\n}\n\nconst mapState = ({ bingo }, { type, index }) => {\n\n    return ({\n        bingo : bingo[type].bingo[index]\n    })\n}\n\nconst mapDispatch = { }\n\nexport default connect(\n    mapState,\n    mapDispatch\n)(BingoCard)","import React, { Component } from 'react'\n\nimport { connect } from 'react-redux'\n\nimport { bingoWinnerCheck } from '../store/modules/bingo'\n\nclass BingoTotal extends Component {\n\n    componentDidUpdate() {\n\n        const { bingoWinnerCheck } = this.props\n\n        bingoWinnerCheck()\n\n    }\n\n    render() {\n\n        const { total } = this.props\n\n        return (\n            <div>\n\n                <h4>\n\n                    { total }\n\n                </h4>\n\n            </div>\n        )\n\n    }\n\n}\n\nconst mapState = ({ bingo }, { type }) => {\n\n    return ({\n        total : bingo[type].bingo.length\n    })\n}\n\nconst mapDispatch = { bingoWinnerCheck }\n\nexport default connect(\n    mapState,\n    mapDispatch\n)(BingoTotal)","import React from 'react'\n\nimport BingoCard from '../containers/BingoCard'\nimport BingoTotal from '../containers/BingoTotal'\n\nexport default ({ type }) => (\n    <article>\n\n        {\n            (() => {\n\n                const cards = []\n\n                for (let i = 0; i < 5; i++) cards.push(<BingoCard key={ i } type={ type } index={ i } />)\n\n                return cards\n\n            })()\n        }\n\n        <BingoTotal type={ type } />\n\n    </article>\n)","import React, { Component } from 'react'\n\nimport { connect } from 'react-redux'\n\nimport { bingoCellPaint, bingoCheck } from '../store/modules/bingo'\nimport { appPlayerFlag } from '../store/modules/app'\n\nclass BingoCell extends Component {\n\n    handleClick = () => {\n\n        const { bingoCellPaint, bingoCheck, appPlayerFlag } = this.props \n        const { cell, paint } = this.props\n\n        if (paint) return alert('이미 체크된 구역입니다.')\n\n        bingoCellPaint(cell)\n        bingoCheck(cell)\n        appPlayerFlag()\n\n    }\n\n    render() {\n\n        const { cell, paint } = this.props\n\n        console.log('render')\n\n        return (\n            <td onClick={ this.handleClick } className={ paint ? 'paint': '' }>\n\n                { cell }\n\n            </td>\n        )\n\n    }\n\n}\n\nconst mapState = ({ bingo }, { type, index }) => {\n\n    return ({\n        cell: bingo[type].cells[index],\n        paint: bingo[type].paints[index]\n    })\n}\n\nconst mapDispatch = { bingoCellPaint, bingoCheck, appPlayerFlag }\n\nexport default connect(\n    mapState,\n    mapDispatch\n)(BingoCell)","import React from 'react'\n\nimport BingoCell from '../containers/BingoCell'\n\nconst renderCells = (type, rowSize, cellSize) => {\n\n    let tick = 0\n    const rows = []\n\n    for (let i = rowSize; i--;) rows.push(<tr key={ i }>{ (() => {\n\n        const cells = []\n\n        for (let i = cellSize; i--;) {\n\n            cells.push(<BingoCell key={ i } type={ type } index={ tick } />)\n\n            tick++\n\n        }\n\n        return cells\n\n    })() }</tr>)\n\n    return rows\n\n}\n\nexport default ({ type, rowSize, cellSize }) => {\n\n    return (\n        <table>\n\n            <tbody>\n\n                { renderCells(type, +rowSize, +cellSize) }\n\n            </tbody>\n\n        </table>\n    )\n}","import React from 'react'\n\nimport BingoScore from './BingoScore'\nimport BIngoTable from './BingoTable'\n\nexport default ({ type, control }) => {\n\n    const handleClick = (e) => {\n\n        if (!control) {\n\n            e.stopPropagation()\n\n            alert('잘못된 차례입니다.')\n\n        }\n\n    }\n\n    return (\n        <section onClickCapture={ handleClick }>\n\n            <BingoScore type={ type } />\n\n            <BIngoTable type={ type } rowSize={ 5 } cellSize={ 5 } />\n\n        </section>\n    )\n\n}","import React, { Component, Fragment } from 'react'\n\nimport { connect } from 'react-redux'\n\nimport BingoBoard from '../components/BingoBoard'\n\nclass Bingo extends Component {\n\n    render() {\n\n        const { flag } = this.props\n\n        return (\n            <Fragment>\n\n                <BingoBoard type='player1' control={ !flag } />\n\n                <BingoBoard type='player2' control={ flag } />\n\n            </Fragment>\n        )\n\n    }\n\n}\n\nconst mapState = ({ app: { flag } }) => ({ flag })\n\nconst mapDispatch = { }\n\nexport default connect(\n    mapState,\n    mapDispatch\n)(Bingo)","import React, { Component } from 'react'\nimport './App.css'\n\nimport WinnerCard from './containers/WinnerCard'\nimport ControlButton from './containers/ControlButton'\nimport Bingo from './containers/Bingo'\n\nclass App extends Component {\n    render() {\n        return(\n            <div className='App'>\n\n                <WinnerCard />\n\n                <ControlButton />\n\n                <Bingo />\n\n            </div>\n        )\n    }\n}\n\nexport default App","import { combineReducers } from 'redux'\n\nimport app from './modules/app'\nimport bingo from './modules/bingo'\n\nexport default combineReducers({ app, bingo })","import { createStore } from 'redux'\n\nimport reducers from './reducers'\n\nexport default createStore(reducers)","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n    <Provider store={ store }>\n        <App />\n    </Provider>\n, document.getElementById('root'))"],"sourceRoot":""}